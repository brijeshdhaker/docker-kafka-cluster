---
version: '3.9'
#

#
services:

#
  kerberos:
    image: brijeshdhaker/kdcserver:22.04
    container_name: kdcserver
    hostname: kdcserver.sandbox.net
    volumes:
      - sandbox_apps_path:/apps
      - /dev/urandom:/dev/random      # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
      - sandbox_krb5_stash:/etc/krb5kdc
      - sandbox_krb5_principal:/var/lib/krb5kdc/
      - ./conf/kerberos:/etc/kerberos
    environment:
      BOOTSTRAP: 0
      #MASTER_KEY_TYPE: des3-hmac-sha1
      #SUPPORTED_ENCRYPTION_TYPES: rc4-hmac des-cbc-md5 des-cbc-crc des3-cbc-sha1 des3-hmac-sha1
      REALM: SANDBOX.NET
      DOMAIN_REALM: sandbox.net
      MASTER_KEY_TYPE: aes256-cts-hmac-sha1-96:normal
      SUPPORTED_ENCRYPTION_TYPES: aes256-cts-hmac-sha1-96:normal aes128-cts-hmac-sha1-96:normal
      KADMIN_PRINCIPAL: kadmin/admin
      KADMIN_PASSWORD: kadmin
      KUSERS_PASSWORD: kuser
    labels:
      - io.confluent.docker.testing=true

#
  zookeeper-a:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper-a.sandbox.net
    container_name: zookeeper-a
    healthcheck:
      test: nc zookeeper-a.sandbox.net 2181 || exit 1
      retries: 20
      interval: 10s
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/cluster/zk-a/data:/var/lib/zookeeper/data
      - ./conf/cluster/zk-a/log:/var/lib/zookeeper/log
      - ./conf/kafka/secrets:/etc/zookeeper/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-a.sandbox.net:2888:3888;zookeeper-b.sandbox.net:2888:3888;zookeeper-c.sandbox.net:2888:3888
      KRB5_CONFIG: "/etc/kerberos/krb5.conf"
      #ALLOW_UNSIGNED: "true"
      #
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/secrets/zookeeper-a.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/zookeeper/secrets/zookeeper-a.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      ZOOKEEPER_SSL_CLIENT_AUTH: "need"
      ZOOKEEPER_SSL_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      ZOOKEEPER_SSL_QUORUM_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      #
      zookeeper-aUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider
      zookeeper-aUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      #
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zookeeper-a-jaas.conf
        -Djava.security.krb5.conf=/etc/kerberos/krb5.conf
        -Dsun.security.krb5.debug=false
    #        -Dzookeeper.requireClientAuthScheme=sasl
    #        -Dzookeeper.allowSaslFailedClients=false
    #        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    ports:
      - 12181:2181
      - 12182:2182
    labels:
      - io.confluent.docker.testing=true

  zookeeper-b:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper-b.sandbox.net
    container_name: zookeeper-b
    healthcheck:
      test: nc zookeeper-b.sandbox.net 2181 || exit 1
      retries: 20
      interval: 10s
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/cluster/zk-b/data:/var/lib/zookeeper/data
      - ./conf/cluster/zk-b/log:/var/lib/zookeeper/log
      - ./conf/kafka/secrets:/etc/zookeeper/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-a.sandbox.net:2888:3888;zookeeper-b.sandbox.net:2888:3888;zookeeper-c.sandbox.net:2888:3888
      KRB5_CONFIG: "/etc/kerberos/krb5.conf"
      #
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/secrets/zookeeper-b.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/zookeeper/secrets/zookeeper-b.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      ZOOKEEPER_SSL_CLIENT_AUTH: "need"
      ZOOKEEPER_SSL_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      ZOOKEEPER_SSL_QUORUM_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      #
      zookeeper-aUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider
      zookeeper-aUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      #
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zookeeper-b-jaas.conf
        -Djava.security.krb5.conf=/etc/kerberos/krb5.conf
        -Dsun.security.krb5.debug=false
    #        -Dzookeeper.requireClientAuthScheme=sasl
    #        -Dzookeeper.allowSaslFailedClients=false
    #        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    ports:
      - 22181:2181
      - 22182:2182
    labels:
      - io.confluent.docker.testing=true

  zookeeper-c:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper-c.sandbox.net
    container_name: zookeeper-c
    healthcheck:
      test: nc zookeeper-c.sandbox.net 2181 || exit 1
      retries: 20
      interval: 10s
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/cluster/zk-c/data:/var/lib/zookeeper/data
      - ./conf/cluster/zk-c/log:/var/lib/zookeeper/log
      - ./conf/kafka/secrets:/etc/zookeeper/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-a.sandbox.net:2888:3888;zookeeper-b.sandbox.net:2888:3888;zookeeper-c.sandbox.net:2888:3888
      KRB5_CONFIG: "/etc/kerberos/krb5.conf"
      #
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/zookeeper/secrets/zookeeper-c.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/zookeeper/secrets/zookeeper-c.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      ZOOKEEPER_SSL_CLIENT_AUTH: "need"
      ZOOKEEPER_SSL_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      ZOOKEEPER_SSL_QUORUM_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      #
      zookeeper-aUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider
      zookeeper-aUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      #
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zookeeper-c-jaas.conf
        -Djava.security.krb5.conf=/etc/kerberos/krb5.conf
        -Dsun.security.krb5.debug=false
    #        -Dzookeeper.requireClientAuthScheme=sasl
    #        -Dzookeeper.allowSaslFailedClients=false
    #        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    ports:
      - 32181:2181
      - 32182:2182
    labels:
      - io.confluent.docker.testing=true

  #
  #
  #
  kafkabroker-a:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafkabroker-a.sandbox.net
    container_name: kafkabroker-a
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/cluster/kb-a/data:/var/lib/kafka/data
      - ./conf/kafka/secrets:/etc/kafka/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-a.sandbox.net:2182,zookeeper-b.sandbox.net:2182,zookeeper-c.sandbox.net:2182
      #
      # KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      #KAFKA_ZOOKEEPER_SSL_PROTOCOL: TLSv1.3,TLSv1.2
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafkabroker-a.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafkabroker-a.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_ZOOKEEPER_SET_ACL: 'true'
      #
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL,SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafkabroker-a.sandbox.net:19091,INTERNAL://kafkabroker-a.sandbox.net:19092,EXTERNAL://kafkabroker-a.sandbox.net:19093,SSL://kafkabroker-a.sandbox.net:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL
      # KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      ## Kerberos / GSSAPI Authentication mechanism
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,GSSAPI
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      #
      ## Listener INTERNAL Configuration
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_mds="mds-secret";
      #
      ## Listener EXTERNAL Configuration
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_LISTENER_NAME_EXTERNAL_GSSAPI_SASL_JAAS_CONFIG: |
        com.sun.security.auth.module.Krb5LoginModule required \
        debug=true \
        useKeyTab=true \
        storeKey=true \
        keyTab="/etc/kerberos/keytabs/kafkabroker-a.keytab" \
        principal="kafka/kafkabroker-a.sandbox.net@SANDBOX.NET";
      #
      ## SSL Additions
      KAFKA_SSL_KEYSTORE_FILENAME: kafkabroker-a.keystore.p12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafkabroker-a-keystore-creds
      KAFKA_SSL_KEY_CREDENTIALS: kafkabroker-a-sslkey-creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafkabroker-a.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafkabroker-a-truststore-creds
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      #
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      KAFKA_LISTENER_NAME_SSL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      #
      ## Log4J
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,org.apache.kafka=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: "INFO, authorizerAppender"
      KAFKA_LOG4J_ADDITIVITY_KAFKA_AUTHORIZER_LOGGER: "false"
      #
      # ZOOKEEPER_SASL_ENABLED: 'FALSE'
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/kafkabroker-a-jaas.conf
        -Djava.security.krb5.conf=/etc/kerberos/krb5.conf
        -Dsun.security.krb5.debug=false
    labels:
      - io.confluent.docker.testing=true

  kafkabroker-b:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafkabroker-b.sandbox.net
    container_name: kafkabroker-b
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/cluster/kb-b/data:/var/lib/kafka/data
      - ./conf/kafka/secrets:/etc/kafka/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-a.sandbox.net:2181,zookeeper-b.sandbox.net:2181,zookeeper-c.sandbox.net:2181
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL,SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafkabroker-b.sandbox.net:19091,INTERNAL://kafkabroker-b.sandbox.net:19092,EXTERNAL://kafkabroker-b.sandbox.net:19093,SSL://kafkabroker-b.sandbox.net:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL
      # KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      #
      ## Kerberos / GSSAPI Authentication mechanism
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,GSSAPI
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      #
      ## Listener INTERNAL Configuration
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_mds="mds-secret";
      #
      ## Listener EXTERNAL Configuration
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_LISTENER_NAME_EXTERNAL_GSSAPI_SASL_JAAS_CONFIG: |
        com.sun.security.auth.module.Krb5LoginModule required \
        debug=true \
        useKeyTab=true \
        storeKey=true \
        keyTab="/etc/kerberos/keytabs/kafkabroker-b.keytab" \
        principal="kafka/kafkabroker-b.sandbox.net@SANDBOX.NET";
      #
      ## SSL Additions
      KAFKA_SSL_KEYSTORE_FILENAME: kafkabroker-b.keystore.p12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafkabroker-b-keystore-creds
      KAFKA_SSL_KEY_CREDENTIALS: kafkabroker-b-sslkey-creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafkabroker-b.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafkabroker-b-truststore-creds
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      #
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      KAFKA_LISTENER_NAME_SSL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      #
      ## Log4J
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,org.apache.kafka=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: "INFO, authorizerAppender"
      KAFKA_LOG4J_ADDITIVITY_KAFKA_AUTHORIZER_LOGGER: "false"
      #
      #ZOOKEEPER_SASL_ENABLED: 'FALSE'
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/kafkabroker-b-jaas.conf
        -Djava.security.krb5.conf=/etc/kerberos/krb5.conf
        -Dsun.security.krb5.debug=false
    labels:
      - io.confluent.docker.testing=true

  kafkabroker-c:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafkabroker-c.sandbox.net
    container_name: kafkabroker-c
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/cluster/kb-c/data:/var/lib/kafka/data
      - ./conf/kafka/secrets:/etc/kafka/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-a.sandbox.net:2181,zookeeper-b.sandbox.net:2181,zookeeper-c.sandbox.net:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL,SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafkabroker-c.sandbox.net:19091,INTERNAL://kafkabroker-c.sandbox.net:19092,EXTERNAL://kafkabroker-c.sandbox.net:19093,SSL://kafkabroker-c.sandbox.net:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL
      # KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      ## Kerberos / GSSAPI Authentication mechanism
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,GSSAPI
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      #
      ## Listener INTERNAL Configuration
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_mds="mds-secret";
      #
      ## Listener EXTERNAL Configuration
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_LISTENER_NAME_EXTERNAL_GSSAPI_SASL_JAAS_CONFIG: |
        com.sun.security.auth.module.Krb5LoginModule required \
        debug=true \
        useKeyTab=true \
        storeKey=true \
        keyTab="/etc/kerberos/keytabs/kafkabroker-c.keytab" \
        principal="kafka/kafkabroker-c.sandbox.net@SANDBOX.NET";
      #
      ## SSL Additions
      KAFKA_SSL_KEYSTORE_FILENAME: kafkabroker-c.keystore.p12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafkabroker-c-keystore-creds
      KAFKA_SSL_KEY_CREDENTIALS: kafkabroker-c-sslkey-creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafkabroker-c.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafkabroker-c-truststore-creds
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      #
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      KAFKA_LISTENER_NAME_SSL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      #
      ## Log4J
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,org.apache.kafka=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: "INFO, authorizerAppender"
      KAFKA_LOG4J_ADDITIVITY_KAFKA_AUTHORIZER_LOGGER: "false"
      #
      #ZOOKEEPER_SASL_ENABLED: 'FALSE'
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/kafkabroker-c-jaas.conf
        -Djava.security.krb5.conf=/etc/kerberos/krb5.conf
        -Dsun.security.krb5.debug=false
    labels:
      - io.confluent.docker.testing=true

  #
  schemaregistry:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schemaregistry.sandbox.net
    container_name: schemaregistry
    depends_on:
      - kafkabroker-a
      - kafkabroker-b
      - kafkabroker-c
    ports:
      - "8081:8081"
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/kafka/secrets:/etc/schema-registry/secrets
      - ./conf/kerberos:/etc/kerberos
      - ./conf/kerberos/krb5.conf:/etc/krb5.conf
    environment:
      KRB5_CONFIG: "/etc/krb5.conf"
      JAVA_OPTS: |
        -Djava.security.krb5.conf=/etc/krb5.conf 
        -Dsun.security.krb5.debug=false
        -Djavax.net.ssl.keyStore=/etc/schema-registry/secrets/schemaregistry.keystore.jks
        -Djavax.net.ssl.keyStorePassword=confluent
        -Djavax.net.ssl.trustStore=/etc/schema-registry/secrets/schemaregistry.truststore.jks
        -Djavax.net.ssl.trustStorePassword=confluent
      #
      SCHEMA_REGISTRY_OPTS: "-Djava.security.krb5.conf=/etc/krb5.conf -Dsun.security.krb5.debug=false"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry.sandbox.net
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafkabroker-a.sandbox.net:19093,kafkabroker-b.sandbox.net:19093,kafkabroker-c.sandbox.net:19093'
      #
      # Configure SASL_SSL if SSL encryption is enabled, otherwise configure SASL_PLAINTEXT
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: GSSAPI
      SCHEMA_REGISTRY_KAFKASTORE_SASL_KERBEROS_SERVICE_NAME: kafka
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: com.sun.security.auth.module.Krb5LoginModule required
        useKeyTab=true
        storeKey=true
        useTicketCache=false
        keyTab="/etc/kerberos/keytabs/schemaregistry.keytab"
        principal="schemaregistry/schemaregistry.sandbox.net@SANDBOX.NET";
      #
      SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      #
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/secrets/schemaregistry.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/schema-registry/secrets/schemaregistry.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      #
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/secrets/schemaregistry.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/schema-registry/secrets/schemaregistry.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: "true"
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
    extra_hosts:
      - "thinkpad.sandbox.net:172.18.0.1"

  #
  kafkaclient:
    image: brijeshdhaker/kafka-clients:7.5.0
    hostname: kafkaclient.sandbox.net
    container_name: kafkaclient
    restart: on-failure
    command: sleep infinity
    volumes:
      - sandbox_apps_path:/apps
      - ./conf/kafka/secrets:/etc/kafka/secrets
      - ./conf/kerberos:/etc/kerberos
    environment:
      KRB5_CONFIG: "/etc/kerberos/krb5.conf"
    extra_hosts:
      - "thinkpad.sandbox.net:172.18.0.1"

#
#
#
volumes:
  #
  sandbox_apps_path:
    external: true
  #
  sandbox_krb5_stash:
    external: true
  sandbox_krb5_principal:
    external: true
  #
  sandbox_mysql_data:
    external: true
  sandbox_mysql_conf:
    external: true
  #
  sandbox_zookeeper_secrets:
    external: true
  sandbox_zookeeper_data:
    external: true
  sandbox_zookeeper_log:
    external: true
  #
  sandbox_kafka_secrets:
    external: true
  sandbox_kafka_data:
    external: true
  sandbox_kafka_log:
    external: true
#
networks:
  default:
    external: true
    driver: bridge
    name: sandbox.net